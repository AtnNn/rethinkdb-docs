IssueComment
  { issueCommentUpdatedAt = 2014 (-05) (-22) 01 : 38 : 50 UTC
  , issueCommentUser =
      SimpleUser
        { simpleUserId = Id 48436
        , simpleUserLogin = N "coffeemug"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/48436?v=3"
        , simpleUserUrl = "https://api.github.com/users/coffeemug"
        , simpleUserType = OwnerUser
        }
  , issueCommentUrl =
      "https://api.github.com/repos/rethinkdb/docs/issues/comments/43839466"
  , issueCommentHtmlUrl =
      "https://github.com/rethinkdb/docs/issues/294#issuecomment-43839466"
  , issueCommentCreatedAt = 2014 (-05) (-22) 01 : 38 : 50 UTC
  , issueCommentBody =
      "> We use \"sequence\" to mean \"array or stream\".\r\n\r\nI think the original intention was to include `selection` into `sequence`, so a sequence would mean table/selection, stream, array, etc. However, if you pass a `selection` to `concatMap`, you don't get a `selection` back, so saying `sequence.concatMap() -> sequence` isn't strictly correct.\r\n\r\nI'm not sure if this type of nitpicking makes the documentation better or worse. @chipotle -- as a newcomer to the doc system, does this make sense? What do you think we should do?"
  , issueCommentId = 43839466
  }