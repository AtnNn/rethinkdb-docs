Issue
  { issueClosedAt = Just 2015 (-09) (-15) 18 : 47 : 22 UTC
  , issueUpdatedAt = 2015 (-09) (-15) 18 : 47 : 22 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/docs/issues/881/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/docs/issues/881"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 881
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 467928
          , simpleUserLogin = N "chipotle"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/467928?v=3"
          , simpleUserUrl = "https://api.github.com/users/chipotle"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 1366
        , simpleUserLogin = N "deontologician"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1366?v=3"
        , simpleUserUrl = "https://api.github.com/users/deontologician"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Driver developer \"gotchas\""
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/docs/issues/881"
  , issueCreatedAt = 2015 (-09) (-02) 22 : 13 : 29 UTC
  , issueBody =
      Just
        "These should probably be added to the driver developer document somewhere.\r\n\r\n- The arguments to `r.do` are flipped around. The wire format requires that the function come first, and the arguments come last. So `r.do(1,2,3, (x,y,z) -> x+y+z)` turns into `r.do((x,y,z)-> x+y+z, 1,2,3)` when serialized.\r\n- The `db` global optarg needs to be wrapped in a `DB` object when serialized, unlike any other optarg. The js driver opts to accept a string and wraps it automatically for you (see rethinkdb/rethinkdb#2495)\r\n- `r.binary` has two possible serializations:\r\n   - the normal `[BINARY [arg]]` serialization if arg is a ReQL term (not including a datum)\r\n   - a special pseudotype serialization `{\"$reql_type$\": \"BINARY\", \"data\": <base64 encoded data>}`\r\n   - The second one is used if the language's native binary format is passed in (`byte[]` in java, `bytes` in python etc)\r\n\r\nIf I think of other stuff or run across it, I'll add it in comments below\r\n"
  , issueState = "closed"
  , issueId = Id 104582726
  , issueComments = 8
  , issueMilestone = Nothing
  }