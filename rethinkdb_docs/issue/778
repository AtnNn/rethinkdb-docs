Issue
  { issueClosedAt = Just 2015 (-06) (-01) 23 : 54 : 05 UTC
  , issueUpdatedAt = 2015 (-06) (-01) 23 : 54 : 05 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/docs/issues/778/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/docs/issues/778"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 778
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 811954
        , simpleUserLogin = N "danielcompton"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/811954?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielcompton"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Explain behaviour of RethinkDB when handling many change feeds requests for same query"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/docs/issues/778"
  , issueCreatedAt = 2015 (-05) (-25) 03 : 38 : 17 UTC
  , issueBody =
      Just
        "Can someone explain how RethinkDB handles the case of many clients requesting change feeds with the same query? A chatroom is the canonical example I'm thinking of.\r\n\r\nIs it more efficient on the DB server to only send one request and handle subscriptions at the app level? Or does the DB server dedupe these and efficiently dispatch the same values to all of them without doing calculations for each one?\r\n\r\nhttp://www.rethinkdb.com/docs/changefeeds/ruby/ says\r\n\r\n> Changefeeds perform well as they scale, although they create extra intracluster messages in proportion to the number of servers with open feed connections on each write.\r\n\r\nDoes this mean that many changefeed subscriptions are collapsed into one query?\r\n\r\nI'm ignoring the bandwidth required and transferring steps in this analysis, although they are important also."
  , issueState = "closed"
  , issueId = Id 80370137
  , issueComments = 7
  , issueMilestone = Nothing
  }