Issue
  { issueClosedAt = Just 2015 (-05) (-05) 22 : 13 : 12 UTC
  , issueUpdatedAt = 2015 (-05) (-05) 22 : 13 : 12 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/docs/issues/743/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/docs/issues/743"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 743
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 1366
        , simpleUserLogin = N "deontologician"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/1366?v=3"
        , simpleUserUrl = "https://api.github.com/users/deontologician"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Changefeeds \"Scaling considerations\" section has the wrong link"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/docs/issues/743"
  , issueCreatedAt = 2015 (-04) (-29) 00 : 43 : 40 UTC
  , issueBody =
      Just
        "Currently the section points the user at http://rethinkdb.com/docs/publish-subscribe/javascript/ and it should instead be pointing at http://rethinkdb.com/docs/rabbitmq/javascript/ . Basically, the section indicates you can get more scalability by using publish subscribe, but the linked article only describes an alternate interface to changefeeds, it doesn't add scalability. The rabbitmq article (in principle) could provide more scalability since it is a dedicated message queue.\r\n\r\nThis also raises the question of whether \"changefeeds don't scale well\" is still accurate, or whether they scale worse than having a message queue would. Both are going to require more memory as more unconsumed changes are sitting around in buffers. @mglukhovsky @danielmewes any thoughts on this? I think @VeXocide did tests with thousands of changefeeds. The current copy seems to indicate changefeeds will devour your memory if you have more than a few."
  , issueState = "closed"
  , issueId = Id 71746983
  , issueComments = 5
  , issueMilestone = Nothing
  }