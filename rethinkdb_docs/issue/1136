Issue
  { issueClosedAt = Just 2016 (-06) (-03) 21 : 03 : 23 UTC
  , issueUpdatedAt = 2016 (-06) (-03) 21 : 03 : 23 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/docs/issues/1136/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/docs/issues/1136"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 1136
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 467928
          , simpleUserLogin = N "chipotle"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/467928?v=3"
          , simpleUserUrl = "https://api.github.com/users/chipotle"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Note important difference between `r.args` and `apply`"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/docs/issues/1136"
  , issueCreatedAt = 2016 (-06) (-03) 00 : 30 : 02 UTC
  , issueBody =
      Just
        "The JavaScript version of the `r.args` documentation currently says http://rethinkdb.com/api/javascript/args/ :\r\n\r\n> This is analogous to using apply in JavaScript.\r\n\r\nThe other language versions have similar statements.\r\n\r\nHowever it turns out that `r.args` has one subtle but sometimes important difference to those native commands.\r\n\r\nUsing `r.args` with a command that evaluates its arguments lazily can yield different results. Since `r.args` takes an array, all of the arguments will be eagerly evaluated before being passed into the parent term.\r\n\r\nFor example\r\n`r.and(a, b)` is *not* equivalent to `r.and(r.args([a, b]))` if `b` has any side effects.\r\nA simple example is `r.and(false, r.error(\"test\"))` vs. `r.and(r.args([false, r.error(\"test\")]))`. The former evaluates to `false`, while the latter throws an error.\r\n\r\nWe should clearly describe this difference in the `r.args` documentation.\r\n\r\n(background: A user ran into this https://github.com/rethinkdb/rethinkdb/issues/5821)"
  , issueState = "closed"
  , issueId = Id 158268348
  , issueComments = 4
  , issueMilestone = Nothing
  }