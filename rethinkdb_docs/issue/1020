Issue
  { issueClosedAt = Just 2016 (-02) (-24) 00 : 26 : 12 UTC
  , issueUpdatedAt = 2016 (-02) (-24) 00 : 26 : 12 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/docs/issues/1020/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/docs/issues/1020"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "f7c6c7"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/docs/labels/api"
          , labelName = "api"
          }
      ]
  , issueNumber = 1020
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 467928
          , simpleUserLogin = N "chipotle"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/467928?v=3"
          , simpleUserUrl = "https://api.github.com/users/chipotle"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Clarify get_nearest description"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/docs/issues/1020"
  , issueCreatedAt = 2016 (-02) (-15) 21 : 17 : 24 UTC
  , issueBody =
      Just
        "I've recently seen multiple cases where users used `getNearest` for scenarios where `getIntersecting(r.circle(center, radius))` would have been more appropriate (and more efficient).\r\n\r\nLooking at the `getNearest` documentation, I think I can understand why that happens.\r\nhttp://rethinkdb.com/api/javascript/get_nearest/ currently says\r\n> Get all documents where the specified geospatial index is within a certain distance of the specified point (default 100 kilometers).\r\n\r\nWhile this isn't wrong, it misses the main point behind `getNearest`. `getNearest` is about getting a certain *number* of results that are nearest to a given point. `getNearest` implements a k-nearest-neighbor query. The results will also be sorted in increasing distance order from the query point.\r\n\r\n`getNearest` imposes a limit on the distance as well, but that's just an implementation detail, rather than part of the main use case of the query.\r\n\r\nIf a user wants to get all results within a certain radius, it is usually faster to use `getIntersecting(r.circle(center, radius), {index: ..})`. Though it should be noted that `r.circle` only generates an approximation of a circle that is slightly too small in some places. `getNearest` is always exact."
  , issueState = "closed"
  , issueId = Id 133819508
  , issueComments = 0
  , issueMilestone = Nothing
  }