Issue
  { issueClosedAt = Just 2015 (-08) (-13) 00 : 03 : 05 UTC
  , issueUpdatedAt = 2015 (-08) (-13) 00 : 03 : 05 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/docs/issues/665/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/docs/issues/665"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 665
  , issueAssignee = Nothing
  , issueUser =
      SimpleUser
        { simpleUserId = Id 505365
        , simpleUserLogin = N "danielmewes"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/505365?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielmewes"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Maintain LTS (2.0) version of API docs"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/docs/issues/665"
  , issueCreatedAt = 2015 (-03) (-06) 03 : 54 : 18 UTC
  , issueBody =
      Just
        "Once we have 2.0 out, we need to keep supporting 2.0 API docs even after releasing newer server versions (2.1 and following).\r\n\r\n@mglukhovsky mentioned at some point that there will be a place in the new website for version information.\r\n\r\nThe other part of that question is how different versions of a document can be maintained in the docs repository and how we're going to deploy them (separate folders, separate files, maybe just a separate branch?).\r\n\r\nIn the simplest case we would simply add annotations to ReQL terms and optargs that mark in which release those terms/optargs were added. However that doesn't work too well if we change the behavior of an existing term."
  , issueState = "closed"
  , issueId = Id 60055968
  , issueComments = 9
  , issueMilestone = Nothing
  }