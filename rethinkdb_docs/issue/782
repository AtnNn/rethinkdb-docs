Issue
  { issueClosedAt = Just 2015 (-06) (-04) 20 : 09 : 21 UTC
  , issueUpdatedAt = 2015 (-06) (-04) 20 : 09 : 21 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/docs/issues/782/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/docs/issues/782"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 782
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 467928
          , simpleUserLogin = N "chipotle"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/467928?v=3"
          , simpleUserUrl = "https://api.github.com/users/chipotle"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 811954
        , simpleUserLogin = N "danielcompton"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/811954?v=3"
        , simpleUserUrl = "https://api.github.com/users/danielcompton"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Clarify order of precedence with which database is used given multiple database contexts"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/docs/issues/782"
  , issueCreatedAt = 2015 (-06) (-03) 01 : 05 : 01 UTC
  , issueBody =
      Just
        "As far as I can tell, there are three possible database contexts that can be used in a query:\r\n\r\n1. The `db` function which constructs a term\r\n2. Specifying a default database on a connection\r\n3. Specifying a database in the `run` function \r\n\r\nFrom my testing it seems that the precedence is as follows:\r\n\r\n1. If a `db` term is present in a query then it is used always\r\n2. If no `db` term is present then the default database in the connection is used\r\n3. If there is no `db` term and no default database specified, then the db from the `run` function is used.\r\n\r\nIs this a correct understanding? I think it would be good to document this precedence somewhere. In our case it's fairly important, as we're receiving queries from an untrusted client, and it'd be great to force db scope to only that client. 7However that doesn't seem to be possible without rewriting the query."
  , issueState = "closed"
  , issueId = Id 84289885
  , issueComments = 2
  , issueMilestone = Nothing
  }