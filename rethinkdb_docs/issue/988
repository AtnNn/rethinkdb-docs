Issue
  { issueClosedAt = Just 2016 (-02) (-16) 23 : 40 : 16 UTC
  , issueUpdatedAt = 2016 (-02) (-16) 23 : 40 : 16 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/docs/issues/988/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/docs/issues/988"
  , issueClosedBy = Nothing
  , issueLabels = []
  , issueNumber = 988
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 467928
          , simpleUserLogin = N "chipotle"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/467928?v=3"
          , simpleUserUrl = "https://api.github.com/users/chipotle"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 478118
        , simpleUserLogin = N "bchavez"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/478118?v=3"
        , simpleUserUrl = "https://api.github.com/users/bchavez"
        , simpleUserType = OwnerUser
        }
  , issueTitle =
      "Clarify Secondary Index Write Consistency on Insert,Update,Delete"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/docs/issues/988"
  , issueCreatedAt = 2015 (-12) (-27) 22 : 15 : 25 UTC
  , issueBody =
      Just
        "Hello,\r\n\r\nI couldn't find any information in the documentation regarding the following question:\r\n\r\n> Is there a way to ensure that an `insert()` will only return when all necessary properties have been indexed? Something like `.insert(...).sync()`, but I want to ensure that sync will only return when the document has been persisted and \8203*indexed*\8203.\r\n\r\n@ha1331 helped and mentioned document inserts are atomic and conclude with secondary indexes appropriately updated and indexes wont ever lag behind inserts. Also confirmed this from a SO @coffeemug post here: http://stackoverflow.com/a/18195786/9275\r\n\r\nThe question came up because some other DB systems can use index methods that lag behind table writes. \r\n\r\nThe documentation for `insert`, `udpate`, `delete`, `sync` should mention something about secondary index consistency (and possibly secondary index consistency in replicas too). From what I've found in the SO post, secondary Indexes are instantly updated on the conclusion of a table `insert/update/delete` when `durability=hard` on the primary node.\r\n\r\nThanks,\r\nBrian"
  , issueState = "closed"
  , issueId = Id 123998613
  , issueComments = 1
  , issueMilestone = Nothing
  }