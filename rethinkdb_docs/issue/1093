Issue
  { issueClosedAt = Nothing
  , issueUpdatedAt = 2016 (-08) (-30) 20 : 42 : 12 UTC
  , issueEventsUrl =
      "https://api.github.com/repos/rethinkdb/docs/issues/1093/events"
  , issueHtmlUrl =
      Just "https://github.com/rethinkdb/docs/issues/1093"
  , issueClosedBy = Nothing
  , issueLabels =
      [ IssueLabel
          { labelColor = "84b6eb"
          , labelUrl =
              "https://api.github.com/repos/rethinkdb/docs/labels/enhancement"
          , labelName = "enhancement"
          }
      ]
  , issueNumber = 1093
  , issueAssignee =
      Just
        SimpleUser
          { simpleUserId = Id 467928
          , simpleUserLogin = N "chipotle"
          , simpleUserAvatarUrl =
              "https://avatars.githubusercontent.com/u/467928?v=3"
          , simpleUserUrl = "https://api.github.com/users/chipotle"
          , simpleUserType = OwnerUser
          }
  , issueUser =
      SimpleUser
        { simpleUserId = Id 3033376
        , simpleUserLogin = N "mike-thompson-day8"
        , simpleUserAvatarUrl =
            "https://avatars.githubusercontent.com/u/3033376?v=3"
        , simpleUserUrl = "https://api.github.com/users/mike-thompson-day8"
        , simpleUserType = OwnerUser
        }
  , issueTitle = "Better Example of Key/Value pair iteration"
  , issuePullRequest = Nothing
  , issueUrl =
      "https://api.github.com/repos/rethinkdb/docs/issues/1093"
  , issueCreatedAt = 2016 (-04) (-22) 11 : 17 : 29 UTC
  , issueBody =
      Just
        "Based on my recent experience coming up to speed on manipulating objects, I'd suggest that the following example should be included somewhere in the API docs.  Had I seen it ... would have saved me a lot of time and a lot of head scratching:\r\n\r\n```\r\nr({\"a\": 1, \"b\": 2}).do(\r\n  (obj) =>  r.map(obj.keys(), obj.values(), (k, v) => [k, v]).coerceTo('OBJECT'))\r\n```\r\n\r\nI propose that this example be placed in the docs for  `map`, because that's where I first went looking, trying to understand how I could iterate across all key/value pairs.  Now, `map` does already have a tiny comment on this, but I missed it the first few times I looked, because my eye was drawn to the examples, and not the explanatory text.  \r\n\r\nNote: I personally find the following version harder to grok which is why I propose the version above:\r\n```\r\nr({\"a\": 1, \"b\": 2}).do(\r\n  (obj) =>  obj.keys().map(obj.values(), (k, v) => [k, v]).coerceTo('OBJECT'))\r\n```"
  , issueState = "open"
  , issueId = Id 150342326
  , issueComments = 0
  , issueMilestone =
      Just
        Milestone
          { milestoneCreator =
              SimpleUser
                { simpleUserId = Id 505365
                , simpleUserLogin = N "danielmewes"
                , simpleUserAvatarUrl =
                    "https://avatars.githubusercontent.com/u/505365?v=3"
                , simpleUserUrl = "https://api.github.com/users/danielmewes"
                , simpleUserType = OwnerUser
                }
          , milestoneDueOn = Nothing
          , milestoneOpenIssues = 75
          , milestoneNumber = 12
          , milestoneClosedIssues = 0
          , milestoneDescription = Just ""
          , milestoneTitle = "backlog"
          , milestoneUrl =
              "https://api.github.com/repos/rethinkdb/docs/milestones/12"
          , milestoneCreatedAt = 2016 (-08) (-30) 20 : 36 : 26 UTC
          , milestoneState = "open"
          }
  }